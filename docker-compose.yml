# services - це те за допомогою чого будуть створюватися containers за допомогою docker-compose
services:
  # web-app - django development server
  web-app:
    build:
      # context: . - шлях до директорії з Dockerfile
      # Dockerfile - буде використаний docker-compose для білда image і запуску з нього containera
      context: .
    ports:
      - "8000:8000"
    # volumes - місця для зберігання даних, ./service - локальна папка яку підключуємо до контейнера
    # всі зміни які будем робити локально будуть зберігатися в докер-контейнері (щоб не робити ребілдів)
    volumes:
      - ./service:/service
    environment:
      - DB_HOST=database # DB_HOST - вказуєм силку на інший сервіс docker-compose, а саме: database
      - DB_NAME=dbname
      - DB_USER=dbuser
      - DB_PASS=pass

    # command - для запуску django server
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"

    # depends_on - вказуємо що web-app буде запущено після запуску database
    depends_on:
      - database

  # database - база даних
  database:
    # postgres - використовуєм образ з docker-hub
    # 14.6-alpine - версія образу
    image: postgres:14.6-alpine
    # прописуєм зміні: POSTGRES_DB, POSTGRES_USER, POSTGRES_PASSWORD щоб звязатися з web-app
    environment:
      - POSTGRES_DB=dbname
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=pass